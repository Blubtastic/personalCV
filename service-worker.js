"use strict";var precacheConfig=[["/personalCV/index.html","c2167e017918e030e0c20c9613a7d9f1"],["/personalCV/static/css/main.0be45c7d.css","fe482c50446ba5079eb77c102401a81c"],["/personalCV/static/js/main.18c72964.js","318c508020465ab7b47a30ef21b54d96"],["/personalCV/static/media/angular.d96aab81.png","d96aab816b07038a4771b38a1a21b36f"],["/personalCV/static/media/code_bubble.ec8d0336.png","ec8d03361ddf989d5b2c1d86f4b6933a"],["/personalCV/static/media/face.6163476d.png","6163476d4921dbaf83480bfe4690fb4e"],["/personalCV/static/media/genetic.a92f1920.png","a92f192005292ee47cf2a85256da6473"],["/personalCV/static/media/git.957c4dd9.png","957c4dd9aa815cc1de2040cc1259589f"],["/personalCV/static/media/gmail.8e462b04.png","8e462b045122dd2affac057a2f7939f7"],["/personalCV/static/media/google_maps3.366ce9de.png","366ce9deeed8f5f0d4cf1556921eb51b"],["/personalCV/static/media/hs_logo.b8eff16c.png","b8eff16cc7dc0564ce1e9eb14355f9a6"],["/personalCV/static/media/io.8878cf88.png","8878cf88f8eb6e115a3ff2473b625ebc"],["/personalCV/static/media/me.bfc0711f.png","bfc0711f842e9d4207ea1e5368cd4f2d"],["/personalCV/static/media/ms3.e9174116.png","e91741164cea194ac8142f8e719132bd"],["/personalCV/static/media/propeller_simple.ec8b98fa.png","ec8b98faa20a4f700c75fef19e3e1346"],["/personalCV/static/media/propeller_simple2.65a967e4.png","65a967e468570482cb8659b0cfc8c9f6"],["/personalCV/static/media/react.f5c1af3b.png","f5c1af3bad4136d1bedc8a57eb4a954a"],["/personalCV/static/media/simple_cover3.12c85ffd.png","12c85ffdae034855120d1f438e44edb6"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(a){return a.redirected?("body"in a?Promise.resolve(a.body):a.blob()).then(function(e){return new Response(e,{headers:a.headers,status:a.status,statusText:a.statusText})}):Promise.resolve(a)},createCacheKey=function(e,a,t,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),r.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(a){return t.every(function(e){return!e.test(a[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],n=new URL(a,self.location),r=createCacheKey(n,hashParamName,t,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var e=new Request(a,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+a+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(a,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(a){return a.keys().then(function(e){return Promise.all(e.map(function(e){if(!t.has(e.url))return a.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(a){if("GET"===a.request.method){var e,t=stripIgnoredUrlParameters(a.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,n),e=urlsToCacheKeys.has(t));var r="/personalCV/index.html";!e&&"navigate"===a.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],a.request.url)&&(t=new URL(r,self.location).toString(),e=urlsToCacheKeys.has(t)),e&&a.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',a.request.url,e),fetch(a.request)}))}});